{"ast":null,"code":"var _jsxFileName = \"/Users/preet2000/Documents/Code/Momentum_Clone-React/src/components/Weather.js\";\nimport React from \"react\";\n\nfunction Weather() {\n  const iconElement = document.querySelector(\".weather-icon\");\n  const tempElement = document.querySelector(\".temperature-value p\");\n  const descElement = document.querySelector(\".temperature-description p\");\n  const locationElement = document.querySelector(\".location p\");\n  const notificationElement = document.querySelector(\".notification\");\n  const weather = {};\n  weather.temperature = {\n    unit: \"celsius\"\n  };\n  const KELVIN = 273;\n  const key = \"8e77c39b71d20bc24b5f9050166d49bd\";\n\n  if ('geolocation' in navigator) {\n    navigator.geolocation.getCurrentPosition(setPosition, showError);\n  } else {\n    notificationElement.style.display = \"block\";\n    notificationElement.innerHTML = \"<p>Browser doesn't Support Geolocation</p>\";\n  }\n\n  function setPosition(position) {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    getWeather(latitude, longitude);\n  }\n\n  function showError(error) {\n    notificationElement.style.display = \"block\";\n    notificationElement.innerHTML = `<p> ${error.message} </p>`;\n  }\n\n  function getWeather(latitude, longitude) {\n    let api = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`;\n    fetch(api).then(function (response) {\n      let data = response.json();\n      return data;\n    }).then(function (data) {\n      weather.temperature.value = Math.floor(data.main.temp - KELVIN);\n      weather.description = data.weather[0].description;\n      weather.iconId = data.weather[0].icon;\n      weather.city = data.name;\n      weather.country = data.sys.country;\n    }).then(function () {\n      displayWeather();\n    });\n  }\n\n  function displayWeather() {\n    iconElement.innerHTML = `<img src=\"icons/${weather.iconId}.png\"/>`;\n    tempElement.innerHTML = `${weather.temperature.value}°<span>C</span>`;\n    descElement.innerHTML = weather.description;\n    locationElement.innerHTML = `${weather.city}, ${weather.country}`;\n  }\n\n  function celsiusToFahrenheit(temperature) {\n    return temperature * 9 / 5 + 32;\n  }\n\n  tempElement.addEventListener(\"click\", function () {\n    if (weather.temperature.value === undefined) return;\n\n    if (weather.temperature.unit === \"celsius\") {\n      let fahrenheit = celsiusToFahrenheit(weather.temperature.value);\n      fahrenheit = Math.floor(fahrenheit);\n      tempElement.innerHTML = `${fahrenheit}° <span>F</span>`;\n      weather.temperature.unit = \"fahrenheit\";\n    } else {\n      tempElement.innerHTML = `${weather.temperature.value}° <span>C</span>`;\n      weather.temperature.unit = \"celsius\";\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/unknown.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 42\n    }\n  }, \"- \\xB0\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 48\n    }\n  }, \"C\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 48\n    }\n  }, \" - \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \"-\")));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/preet2000/Documents/Code/Momentum_Clone-React/src/components/Weather.js"],"names":["React","Weather","iconElement","document","querySelector","tempElement","descElement","locationElement","notificationElement","weather","temperature","unit","KELVIN","key","navigator","geolocation","getCurrentPosition","setPosition","showError","style","display","innerHTML","position","latitude","coords","longitude","getWeather","error","message","api","fetch","then","response","data","json","value","Math","floor","main","temp","description","iconId","icon","city","name","country","sys","displayWeather","celsiusToFahrenheit","addEventListener","undefined","fahrenheit"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction Weather() {\n  const iconElement = document.querySelector(\".weather-icon\");\n  const tempElement = document.querySelector(\".temperature-value p\");\n  const descElement = document.querySelector(\".temperature-description p\");\n  const locationElement = document.querySelector(\".location p\");\n  const notificationElement = document.querySelector(\".notification\");\n  \n  const weather = {};\n  \n  weather.temperature = {\n      unit:\"celsius\"\n  }\n  \n  \n  const KELVIN = 273;\n  const key = \"8e77c39b71d20bc24b5f9050166d49bd\";\n  \n  if('geolocation' in navigator){\n      navigator.geolocation.getCurrentPosition(setPosition, showError);\n  }else{\n      notificationElement.style.display = \"block\";\n      notificationElement.innerHTML = \"<p>Browser doesn't Support Geolocation</p>\";\n  }\n  \n  function setPosition(position){\n      let latitude = position.coords.latitude;\n      let longitude = position.coords.longitude;\n      \n      getWeather(latitude, longitude);\n  }\n  \n  function showError(error){\n      notificationElement.style.display = \"block\";\n      notificationElement.innerHTML = `<p> ${error.message} </p>`;\n  }\n  \n  function getWeather(latitude, longitude){\n      let api = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`;\n      \n      fetch(api)\n          .then(function(response){\n              let data = response.json();\n              return data;\n          })\n          .then(function(data){\n              weather.temperature.value = Math.floor(data.main.temp - KELVIN);\n              weather.description = data.weather[0].description;\n              weather.iconId = data.weather[0].icon;\n              weather.city = data.name;\n              weather.country = data.sys.country;\n          })\n          .then(function(){\n              displayWeather();\n          });\n  }\n  \n  function displayWeather(){\n      iconElement.innerHTML = `<img src=\"icons/${weather.iconId}.png\"/>`;\n      tempElement.innerHTML = `${weather.temperature.value}°<span>C</span>`;\n      descElement.innerHTML = weather.description;\n      locationElement.innerHTML = `${weather.city}, ${weather.country}`;\n  }\n  \n  function celsiusToFahrenheit(temperature){\n      return (temperature * 9/5)+32;\n  }\n  \n  tempElement.addEventListener(\"click\", function(){\n  \n      if(weather.temperature.value === undefined) return;\n  \n      if(weather.temperature.unit === \"celsius\"){\n          let fahrenheit = celsiusToFahrenheit(weather.temperature.value);\n          \n          fahrenheit = Math.floor(fahrenheit);\n  \n          tempElement.innerHTML = `${fahrenheit}° <span>F</span>`;\n  \n          weather.temperature.unit = \"fahrenheit\";\n      } else{\n          tempElement.innerHTML = `${weather.temperature.value}° <span>C</span>`;\n          weather.temperature.unit = \"celsius\";\n      }\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"weather-container\">\n        <img src=\"icons/unknown.png\" alt=\"\"/>\n      </div>\n\n      <div className=\"temperature-value\"><p>- °<span>C</span></p></div>\n\n      <div className=\"temperature-description\"><p> - </p></div>\n\n      <div className=\"location\"><p>-</p></div>\n    </div>\n  );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}